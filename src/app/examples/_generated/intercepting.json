{
  "meta": {
    "kind": "intercepting-routes",
    "path": "intercepting",
    "title": "Intercepting Routes",
    "description": "\nIntercepting routes allows you to load a route from another part of your application within the current layout.\nThis routing paradigm can be useful when you want to display the content of a route without the user switching to a different context.\n\n(.) to match segments on the same level\n(..) to match segments one level above\n(..)(..) to match segments two levels above\n(...) to match segments from the root app directory\n    ",
    "doc": "https://nextjs.org/docs/app/building-your-application/routing/intercepting-routes"
  },
  "codes": {
    "(.)same-level/page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { Box } from \"../_components/box\";\n\nexport default function Page() {\n  return (\n    <Boundary label=\"Intercepting\">\n      <Box\n        title=\"intercepting the same-level page now...\"\n        isInterceptingRouter\n      />\n    </Boundary>\n  );\n}\n",
    "_components/box.tsx": "\"use client\";\n\nimport { useRouter } from \"next/navigation\";\nimport { type PropsWithChildren } from \"react\";\n\ntype Props = PropsWithChildren<{\n  title: string;\n  isInterceptingRouter?: boolean;\n}>;\n\nexport function Box({ title, isInterceptingRouter, children }: Props) {\n  const router = useRouter();\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <h2>{title}</h2>\n      <p className=\"text-sm text-gray-400\">\n        {isInterceptingRouter\n          ? \"When you reload this page, the interceptor won't show.\"\n          : \"You won't reach this page unless you visit it directly.\"}\n      </p>\n      {children}\n      <div className=\"flex justify-around\">\n        <button\n          type=\"button\"\n          onClick={() => {\n            if (isInterceptingRouter) {\n              router.back();\n            } else {\n              router.replace(\"/examples/intercepting\");\n            }\n          }}\n        >\n          Back\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            window.location.reload();\n          }}\n        >\n          Reload\n        </button>\n      </div>\n    </div>\n  );\n}\n",
    "levels/(..)one-level-above/page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { Box } from \"../../_components/box\";\n\nexport default function Page() {\n  return (\n    <Boundary label=\"Intercepting\">\n      <Box\n        title=\"intercepting the one-level-above page now...\"\n        isInterceptingRouter\n      />\n    </Boundary>\n  );\n}\n",
    "levels/page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { Link } from \"@/app/_components/link\";\n\nexport default function Page() {\n  return (\n    <Boundary label=\"/levels\">\n      <div className=\"flex flex-col gap-4\">\n        <Link href=\"/examples/intercepting/one-level-above\">\n          /one-level-above (..)\n        </Link>\n        <Link href=\"/examples/intercepting/levels/two\">/levels/two</Link>\n      </div>\n    </Boundary>\n  );\n}\n",
    "levels/two/(..)(..)two-level-above/page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { Box } from \"../../../_components/box\";\n\nexport default function Page() {\n  return (\n    <Boundary label=\"Intercepting\">\n      <Box\n        title=\"intercepting the two-level-above page now...\"\n        isInterceptingRouter\n      />\n    </Boundary>\n  );\n}\n",
    "levels/two/page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { Link } from \"@/app/_components/link\";\n\n// (..)(..) doesn't work\n// see https://github.com/vercel/next.js/issues/57016\n\nexport default function Page() {\n  return (\n    <Boundary label=\"/levels/two\">\n      <div className=\"flex flex-col gap-4\">\n        <Link href=\"/examples/intercepting/two-level-above\">\n          levels/two (..)(..)\n        </Link>\n      </div>\n    </Boundary>\n  );\n}\n",
    "one-level-above/page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { Box } from \"../_components/box\";\n\nexport default function Page() {\n  return (\n    <Boundary label=\"One Level Above\">\n      <Box title=\"one-level-above page\" isInterceptingRouter={false} />\n    </Boundary>\n  );\n}\n",
    "page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { Link } from \"@/app/_components/link\";\n\nexport default function Page() {\n  return (\n    <Boundary label=\"Root Page\">\n      <div className=\"flex flex-col gap-4\">\n        <Link href=\"/examples/intercepting/same-level\">/same-level (.)</Link>\n        <Link href=\"/examples/intercepting/levels\">/levels (..), (..)(..)</Link>\n      </div>\n    </Boundary>\n  );\n}\n",
    "same-level/page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { Box } from \"../_components/box\";\n\nexport default function Page() {\n  return (\n    <Boundary label=\"Same Level\">\n      <Box title=\"same-level page\" isInterceptingRouter={false} />\n    </Boundary>\n  );\n}\n",
    "two-level-above/page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { Box } from \"../_components/box\";\n\nexport default function Page() {\n  return (\n    <Boundary label=\"Two Level Above\">\n      <Box title=\"two-level-above page\" isInterceptingRouter={false} />\n    </Boundary>\n  );\n}\n"
  }
}