{
  "meta": {
    "kind": "loading",
    "path": "loading-with-streaming",
    "title": "Loading with Streaming",
    "description": "\nIn addition to loading.js, you can also manually create Suspense Boundaries for your own UI components. The App Router supports streaming with Suspense for both Node.js and Edge runtimes.\n  ",
    "doc": "https://nextjs.org/docs/app/building-your-application/routing/loading-ui-and-streaming#streaming-with-suspense"
  },
  "codes": {
    "page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { Loading } from \"@/app/_components/loading\";\nimport { Suspense } from \"react\";\n\n// turn off full route cache for demo\nexport const dynamic = \"force-dynamic\";\n\nexport default function Page() {\n  return (\n    <div className=\"flex gap-4\">\n      <Suspense fallback={<Loading />}>\n        <Left />\n      </Suspense>\n      <Boundary label=\"Right\">hi!</Boundary>\n    </div>\n  );\n}\n\nasync function Left() {\n  await new Promise((resolve) => setTimeout(resolve, 2000));\n\n  return <Boundary label=\"Left\">loaded!</Boundary>;\n}\n"
  }
}