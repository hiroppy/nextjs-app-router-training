{
  "meta": {
    "kind": "parallel-routes",
    "path": "parallel-condition",
    "title": "Conditional Routes",
    "description": "\nParallel Routes can be used to implement conditional routing. For example, you can render a @dashboard or @login route depending on the authentication state.\n    ",
    "doc": "https://nextjs.org/docs/app/building-your-application/routing/parallel-routes#conditional-routes"
  },
  "codes": {
    "@dashboard/page.tsx": "import { Button } from \"@/app/_components/button\";\nimport { cookies } from \"next/headers\";\nimport { Box } from \"../_components/box\";\nimport { COOKIE_NAME } from \"../constants\";\n\nexport default function Page() {\n  async function logOut() {\n    \"use server\";\n\n    cookies().delete(COOKIE_NAME);\n  }\n\n  return (\n    <Box title=\"Dashboard\">\n      <form action={logOut}>\n        <Button type=\"submit\">logout</Button>\n      </form>\n      <p>you are logged in üòÑ</p>\n    </Box>\n  );\n}\n",
    "@login/page.tsx": "import { Button } from \"@/app/_components/button\";\nimport { cookies } from \"next/headers\";\nimport { Box } from \"../_components/box\";\nimport { COOKIE_NAME } from \"../constants\";\n\nexport default function Page() {\n  async function login() {\n    \"use server\";\n\n    cookies().set(COOKIE_NAME, \"true\");\n  }\n\n  return (\n    <Box title=\"Login\">\n      <form action={login}>\n        <Button type=\"submit\">login</Button>\n      </form>\n      <p>Please log in!</p>\n    </Box>\n  );\n}\n",
    "_components/box.tsx": "import { type PropsWithChildren } from \"react\";\n\ntype Props = PropsWithChildren<{\n  title: string;\n}>;\n\nexport function Box({ title, children }: Props) {\n  return (\n    <div className=\"w-full flex flex-col items-center justify-center gap-5 border border-gray-500 p-2 rounded-md text-gray-300\">\n      <h2 className=\"text-gray-200 text-xl font-semibold\">{title}</h2>\n      {children}\n    </div>\n  );\n}\n",
    "constants.ts": "export const COOKIE_NAME = \"parallel-condition\";\n",
    "layout.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { cookies } from \"next/headers\";\nimport { type PropsWithChildren } from \"react\";\nimport { COOKIE_NAME } from \"./constants\";\n\ntype Props = PropsWithChildren<{\n  dashboard: React.ReactNode;\n  login: React.ReactNode;\n}>;\n\nexport default function Layout({ dashboard, login, children }: Props) {\n  const isLoggedIn = cookies().get(COOKIE_NAME)?.value === \"true\";\n\n  return (\n    <Boundary label=\"Layout\">\n      <div className=\"flex flex-col gap-2\">\n        <div className={[isLoggedIn ? \"bg-green-950\" : \"bg-red-950\"].join(\" \")}>\n          {isLoggedIn ? dashboard : login}\n        </div>\n        {children}\n      </div>\n    </Boundary>\n  );\n}\n",
    "page.tsx": "export default function Page() {\n  return <p>üêï</p>;\n}\n"
  }
}