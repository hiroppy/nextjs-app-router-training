{
  "meta": {
    "kind": "route-groups",
    "path": "grouping",
    "title": "Route Groups",
    "description": "\nIn the app directory, nested folders are normally mapped to URL paths. However, you can mark a folder as a Route Group to prevent the folder from being included in the route's URL path.\nThis allows you to organize your route segments and project files into logical groups without affecting the URL path structure.\n    ",
    "doc": "https://nextjs.org/docs/app/building-your-application/routing/route-groups"
  },
  "codes": {
    "(private)/admin/layout.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { PropsWithChildren } from \"react\";\n\nexport default function Layout({ children }: PropsWithChildren) {\n  return (\n    <Boundary label=\"Private Layout\" bg=\"green\">\n      {children}\n    </Boundary>\n  );\n}\n",
    "(private)/admin/page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\n\nexport default function Page() {\n  return (\n    <Boundary label=\"Private page\">\n      file path: grouping/(private)/admin\n    </Boundary>\n  );\n}\n",
    "(public)/items/layout.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { PropsWithChildren } from \"react\";\n\nexport default function Layout({ children }: PropsWithChildren) {\n  return (\n    <Boundary label=\"Public Layout\" bg=\"red\">\n      {children}\n    </Boundary>\n  );\n}\n",
    "(public)/items/page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\n\nexport default function Page() {\n  return (\n    <Boundary label=\"Public Page\">file path: grouping/(public)/items</Boundary>\n  );\n}\n",
    "layout.tsx": "\"use client\";\n\nimport { Boundary } from \"@/app/_components/boundary\";\nimport { usePathname } from \"next/navigation\";\nimport { type PropsWithChildren } from \"react\";\n\nexport default function Layout({ children }: PropsWithChildren) {\n  const pathname = usePathname();\n\n  return (\n    <Boundary label=\"Root Layout\">\n      <div className=\"flex flex-col gap-4\">\n        <p>current path: {pathname}</p>\n        {children}\n      </div>\n    </Boundary>\n  );\n}\n",
    "page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { Link } from \"@/app/_components/link\";\n\nexport default function Page() {\n  return (\n    <Boundary label=\"Root Page\">\n      <div className=\"flex flex-col gap-4\">\n        <p className=\"text-gray-300\">\n          \"(grouping)\" will be skipped from the url path. This is useful when\n          you want to separate the layouts even though they have the same path\n          hierarchy.\n        </p>\n        <div className=\"flex justify-around\">\n          <Link href=\"/examples/grouping/admin\">admin</Link>\n          <Link href=\"/examples/grouping/items\">items</Link>\n        </div>\n      </div>\n    </Boundary>\n  );\n}\n"
  }
}