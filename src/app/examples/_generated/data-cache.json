{
  "meta": {
    "kind": "caching",
    "path": "data-cache",
    "title": "Data Cache (@server)",
    "description": "\nNext.js has a built-in Data Cache that persists the result of data fetches across incoming server requests and deployments.\nThis is possible because Next.js extends the native fetch API to allow each request on the server to set its own persistent caching semantics.\n      ",
    "doc": "https://nextjs.org/docs/app/building-your-application/caching#data-cache"
  },
  "codes": {
    "no-store/page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { NOW_API_ENDPOINT, NowResponse } from \"@/constants\";\n\nexport default async function Page() {\n  const { now: noStore }: NowResponse = await (\n    await fetch(NOW_API_ENDPOINT, {\n      cache: \"no-store\",\n    })\n  ).json();\n\n  return <Boundary label=\"No Store\">{noStore}</Boundary>;\n}\n",
    "page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { Link } from \"@/app/_components/link\";\nimport { NOW_API_ENDPOINT, NowResponse } from \"@/constants\";\n\nexport default async function Page() {\n  const { now: persited }: NowResponse = await (\n    await fetch(NOW_API_ENDPOINT)\n  ).json();\n\n  return (\n    <Boundary label=\"Page\">\n      <div className=\"flex flex-col gap-4\">\n        <p>Persited (default): {persited}</p>\n        <Link href=\"/examples/data-cache/no-store?file-path=no-store/page.tsx\">\n          No store cache\n        </Link>\n        <Link href=\"/examples/data-cache/revalidate?file-path=revalidate/page.tsx\">\n          Revalidating cache\n        </Link>\n      </div>\n    </Boundary>\n  );\n}\n",
    "revalidate/layout.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { NOW_API_ENDPOINT, NowResponse } from \"@/constants\";\nimport { PropsWithChildren } from \"react\";\n\nexport default async function Layout({ children }: PropsWithChildren) {\n  const { now }: NowResponse = await (await fetch(NOW_API_ENDPOINT)).json();\n\n  return (\n    <Boundary label=\"Revalidation Layout\">\n      <div className=\"flex flex-col gap-4\">\n        <p>\n          {now}{\" \"}\n          <span className=\"text-sm text-gray-400\">\n            {\"(depends on child's config)\"}\n          </span>\n        </p>\n        {children}\n      </div>\n    </Boundary>\n  );\n}\n",
    "revalidate/page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { Link } from \"@/app/_components/link\";\nimport { NOW_API_ENDPOINT, NowResponse } from \"@/constants\";\n\nexport default async function Page() {\n  const { now: noStore }: NowResponse = await (\n    await fetch(NOW_API_ENDPOINT, {\n      next: {\n        revalidate: 3,\n      },\n    })\n  ).json();\n\n  return (\n    <div>\n      <Boundary label=\"Time-based Revalidation\">\n        <div className=\"flex flex-col gap-6\">\n          <p>3s: {noStore}</p>\n        </div>\n      </Boundary>\n      <Boundary label=\"On-Demand Revalidation\">\n        <div className=\"flex flex-col gap-2\">\n          <div className=\"flex justify-around\">\n            <Link href=\"/examples/data-cache/revalidate/revalidate-path?file-path=revalidate/revalidate-path/page.tsx\">\n              revalidatePath\n            </Link>\n            <Link href=\"/examples/data-cache/revalidate/revalidate-tag?file-path=revalidate/revalidate-tag/page.tsx\">\n              revalidateTag\n            </Link>\n          </div>\n        </div>\n      </Boundary>\n    </div>\n  );\n}\n",
    "revalidate/revalidate-path/page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { Button } from \"@/app/_components/button\";\nimport { NOW_API_ENDPOINT, NowResponse } from \"@/constants\";\nimport { revalidatePath } from \"next/cache\";\n\nexport default async function Page() {\n  async function update() {\n    \"use server\";\n\n    revalidatePath(\"/examples/data-cache/revalidate-path\");\n  }\n\n  const data = await fetch(NOW_API_ENDPOINT);\n  const { now }: NowResponse = await data.json();\n\n  return (\n    <Boundary label=\"RevalidatePath\">\n      <div className=\"flex flex-col gap-4\">\n        <p>{now}</p>\n        <form action={update}>\n          <Button type=\"submit\">update</Button>\n        </form>\n      </div>\n    </Boundary>\n  );\n}\n",
    "revalidate/revalidate-tag/page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { Button } from \"@/app/_components/button\";\nimport { NOW_API_ENDPOINT, NowResponse } from \"@/constants\";\nimport { revalidateTag } from \"next/cache\";\n\nexport default async function Page() {\n  async function update() {\n    \"use server\";\n\n    revalidateTag(\"tag\");\n  }\n\n  const { now }: NowResponse = await (\n    await fetch(NOW_API_ENDPOINT, {\n      next: {\n        tags: [\"tag\"],\n      },\n    })\n  ).json();\n  const { now: noTag }: NowResponse = await (\n    await fetch(NOW_API_ENDPOINT, {\n      next: {\n        // the tag isn't matter when using server action\n        tags: [],\n      },\n    })\n  ).json();\n\n  return (\n    <Boundary label=\"RevalidateTag\">\n      <div className=\"flex flex-col gap-4\">\n        <div>\n          <p>tag: {now}</p>\n          <p>noTag: {noTag}</p>\n        </div>\n        <form action={update}>\n          <Button type=\"submit\">update</Button>\n        </form>\n      </div>\n    </Boundary>\n  );\n}\n"
  }
}